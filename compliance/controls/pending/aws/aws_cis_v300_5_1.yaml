Description: The Network Access Control List (NACL) function provide stateless filtering of ingress and
  egress network traffic to AWS resources. It is recommended that no NACL allows unrestricted
  ingress access to remote server administration ports, such as SSH to port 22 and RDP to
  port 3389, using either the TCP (6), UDP (17) or ALL (-1) protocols.
ID: aws_cis_v300_5_1
IntegrationType:
  - aws_cloud_account
Query:
  Engine: CloudQL-v0.0.1
  ListOfTables: []
  Parameters: []
  PrimaryTable: ""
  QueryToExecute: |
    WITH bad_rules AS (
      SELECT
        network_acl_id,
        COUNT(*) AS num_bad_rules,
        tags,
        region,
        account_id
      FROM
        aws_vpc_network_acl,
        jsonb_array_elements(entries) AS att
      WHERE
        att ->> 'Egress' = 'false'
        AND (
          att ->> 'CidrBlock' = '0.0.0.0/0'
          OR att ->> 'Ipv6CidrBlock' = '::/0'
        )
        AND att ->> 'RuleAction' = 'allow'
        AND (
          (
            att ->> 'Protocol' = '-1'
            AND att ->> 'PortRange' IS NULL
          )
          OR (
            (att -> 'PortRange' ->> 'From')::int <= 22
            AND (att -> 'PortRange' ->> 'To')::int >= 22
            AND att ->> 'Protocol' IN ('6', '17')
          )
          OR (
            (att -> 'PortRange' ->> 'From')::int <= 3389
            AND (att -> 'PortRange' ->> 'To')::int >= 3389
            AND att ->> 'Protocol' IN ('6', '17')
          )
        )
      GROUP BY
        network_acl_id,
        region,
        account_id,
        tags
      ORDER BY
        network_acl_id,
        region,
        account_id,
        tags
    ),
    aws_vpc_network_acls AS (
      SELECT
        network_acl_id,
        tags,
        partition,
        region,
        account_id
      FROM
        aws_vpc_network_acl
      ORDER BY
        network_acl_id,
        region,
        account_id
    )
    SELECT
      'arn:' || acl.partition || ':ec2:' || acl.region || ':' || acl.account_id || ':network-acl/' || acl.network_acl_id AS resource,
      CASE
        WHEN bad_rules.network_acl_id IS NULL THEN 'ok'
        ELSE 'alarm'
      END AS status,
      CASE
        WHEN bad_rules.network_acl_id IS NULL THEN acl.network_acl_id || ' does not allow ingress to port 22 or 3389 from 0.0.0.0/0 or ::/0.'
        ELSE acl.network_acl_id || ' contains ' || bad_rules.num_bad_rules || ' rule(s) allowing ingress to port 22 or 3389 from 0.0.0.0/0 or ::/0.'
      END AS reason
    FROM
      aws_vpc_network_acls AS acl
    LEFT JOIN bad_rules ON bad_rules.network_acl_id = acl.network_acl_id;
Severity: low
Tags: {}
Title: 5.1 Ensure no Network ACLs allow ingress from 0.0.0.0/0 to remote server administration ports