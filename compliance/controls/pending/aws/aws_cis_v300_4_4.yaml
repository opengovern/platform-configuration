ID: aws_cis_v300_4_4
Title: "4.4 Ensure IAM policy changes are monitored"
Description: "Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs, or an external Security information and event management (SIEM) environment, and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established changes made to Identity and Access Management (IAM) policies."
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: "with trails as (\n  select\n    trail.account_id,\n    trail.name as trail_name,\n    trail.is_logging,\n    split_part(trail.log_group_arn, ':', 7) as log_group_name\n  from\n    aws_cloudtrail_trail as trail,\n    jsonb_array_elements(trail.event_selectors) as se\n  where\n    trail.is_multi_region_trail is true\n    and trail.is_logging\n    and se ->> 'ReadWriteType' = 'All'\n    and trail.log_group_arn is not null\n  order by\n    trail_name\n),\nalarms as (\n  select\n    metric_name,\n    action_arn as topic_arn\n  from\n    aws_cloudwatch_alarm,\n    jsonb_array_elements_text(aws_cloudwatch_alarm.alarm_actions) as action_arn\n  order by\n    metric_name\n),\ntopic_subscriptions as (\n  select\n    subscription_arn,\n    topic_arn\n  from\n    aws_sns_topic_subscription\n  order by\n    subscription_arn\n),\nmetric_filters as (\n  select\n    filter.name as filter_name,\n    filter_pattern,\n    log_group_name,\n    metric_transformation_name\n  from\n    aws_cloudwatch_log_metric_filter as filter\n  where\n    filter.filter_pattern ~ '\\s*\\$\\.eventName\\s*=\\s*DeleteGroupPolicy.+\\$\\.eventName\\s*=\\s*DeleteRolePolicy.+\\$\\.eventName\\s*=\\s*DeleteUserPolicy.+\\$\\.eventName\\s*=\\s*PutGroupPolicy.+\\$\\.eventName\\s*=\\s*PutRolePolicy.+\\$\\.eventName\\s*=\\s*PutUserPolicy.+\\$\\.eventName\\s*=\\s*CreatePolicy.+\\$\\.eventName\\s*=\\s*DeletePolicy.+\\$\\.eventName\\s*=\\s*CreatePolicyVersion.+\\$\\.eventName\\s*=\\s*DeletePolicyVersion.+\\$\\.eventName\\s*=\\s*AttachRolePolicy.+\\$\\.eventName\\s*=\\s*DetachRolePolicy.+\\$\\.eventName\\s*=\\s*AttachUserPolicy.+\\$\\.eventName\\s*=\\s*DetachUserPolicy.+\\$\\.eventName\\s*=\\s*AttachGroupPolicy.+\\$\\.eventName\\s*=\\s*DetachGroupPolicy'\n  order by\n    filter_name\n),\nfilter_data as (\n  select\n    t.account_id,\n    t.trail_name,\n    f.filter_name\n  from\n    trails as t\n  join\n    metric_filters as f on f.log_group_name = t.log_group_name\n  join\n    alarms as alarm on alarm.metric_name = f.metric_transformation_name\n  join\n    topic_subscriptions as subscription on subscription.topic_arn = alarm.topic_arn\n)\nselect\n  distinct 'arn:' || a.partition || ':::' || a.account_id as resource,\n  case\n    when f.trail_name is null then 'alarm'\n    else 'ok'\n  end as status,\n  case\n    when f.trail_name is null then 'No log metric filter and alarm exist for IAM policy changes.'\n    else filter_name || ' forwards events for IAM policy changes.'\n  end as reason\n  \nfrom\n  aws_account as a\n  left join filter_data as f on a.account_id = f.account_id;\n"
  PrimaryTable: ""
  ListOfTables: []
  Parameters: []
Severity: low
Tags: {}
Integration_Type_Name:
  - aws_cloud
