ID: aws_vpc_security_group_restrict_ingress_tcp_udp_all
Title: "VPC security groups should restrict ingress TCP and UDP access from 0.0.0.0/0"
Description: "Manage access to resources in the AWS Cloud by ensuring common ports are restricted on AWS Elastic Compute Cloud (AWS EC2) Security Groups."
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: |
    with bad_rules as (
      select
        group_id,
        count(*) as num_bad_rules
      from
        aws_vpc_security_group_rule
      where
        type = 'ingress'
        and cidr_ipv4 = '0.0.0.0/0'
        and (
          ip_protocol in ('tcp', 'udp')
          or (
            ip_protocol = '-1'
            and from_port is null
          )
        )
      group by
        group_id
    )
    select
      arn as resource,
      og_account_id as og_account_id,
      og_resource_id as og_resource_id,
      case
        when bad_rules.group_id is null then 'ok'
        else 'alarm'
      end as status,
      case
        when bad_rules.group_id is null then sg.group_id || ' does not allow ingress to TCP or UDP ports from 0.0.0.0/0.'
        else sg.group_id || ' contains ' || bad_rules.num_bad_rules || ' rule(s) that allow ingress to TCP or UDP ports from 0.0.0.0/0.'
      end as reason
      , region, account_id
    from
      aws_vpc_security_group as sg
      left join bad_rules on bad_rules.group_id = sg.group_id;
  PrimaryTable: aws_vpc_security_group
  ListOfTables:
    - aws_vpc_security_group
    - aws_vpc_security_group_rule
  Parameters: []
Severity: high
Tags:
  category:
    - Compliance
  cisa_cyber_essentials:
    - "true"
  fedramp_low_rev_4:
    - "true"
  fedramp_moderate_rev_4:
    - "true"
  ffiec:
    - "true"
  gxp_21_cfr_part_11:
    - "true"
  hipaa_final_omnibus_security_rule_2013:
    - "true"
  hipaa_security_rule_2003:
    - "true"
  nist_800_171_rev_2:
    - "true"
  nist_800_53_rev_4:
    - "true"
  nist_800_53_rev_5:
    - "true"
  nist_csf:
    - "true"
  pci_dss_v321:
    - "true"
  plugin:
    - aws
  rbi_cyber_security:
    - "true"
  service:
    - AWS/VPC
  soc_2:
    - "true"
IntegrationTypeName:
  - aws_cloud
