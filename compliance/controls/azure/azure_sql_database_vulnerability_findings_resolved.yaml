ID: azure_sql_database_vulnerability_findings_resolved
Title: "SQL databases should have vulnerability findings resolved"
Description: "Monitor vulnerability assessment scan results and recommendations for how to remediate database vulnerabilities."
Connector:
- azure
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: |
    with vulnerability_findings as (
      select
        db.id as database_id,
        scan ->> 'endTime' latest_scan_end_time,
        scan ->> 'numberOfFailedSecurityChecks' no_of_failed_sec_checks
      from
        azure_sql_database as db,
        jsonb_array_elements(vulnerability_assessment_scan_records) as scan
      where
        (scan ->> 'numberOfFailedSecurityChecks')::int = 0
      order by scan ->> 'endTime' desc nulls last
      limit 1
    )
    select
      distinct a.id as resource,
      a.kaytu_account_id as kaytu_account_id,
      a.kaytu_resource_id as kaytu_resource_id,
      case
        when s.database_id is not null then 'ok'
        else 'alarm'
      end as status,
      case
        when s.database_id is not null then a.name || ' vulnerability findings resolved.'
        else a.title || ' vulnerability findings not resolved.'
      end as reason
      
      , a.resource_group as resource_group
      , sub.display_name as subscription
    from
      azure_sql_database as a
      left join vulnerability_findings as s on a.id = s.database_id,
      azure_subscription as sub
    where
      a.name <> 'master'
      and sub.subscription_id = a.subscription_id;
  PrimaryTable: azure_sql_database
  ListOfTables:
  - azure_sql_database
  - azure_subscription
  Parameters: []
Severity: high
Tags:
  hipaa_hitrust_v92:
  - "true"
  nist_sp_800_53_rev_5:
  - "true"
  pci_dss_v321:
  - "true"
  service:
  - Azure/SQL
