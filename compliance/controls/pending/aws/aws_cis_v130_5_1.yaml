ID: aws_cis_v130_5_1
Title: "5.1 Ensure no Network ACLs allow ingress from 0.0.0.0/0 to remote server administration ports"
Description: "The Network Access Control List (NACL) function provide stateless filtering of ingress and egress network traffic to AWS resources. It is recommended that no NACL allows unrestricted ingress access to remote server administration ports, such as SSH to port 22 and RDP to port 3389."
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: "with bad_rules as (\n  select\n    network_acl_id,\n    count(*) as num_bad_rules,\n    tags,\n    region,\n    account_id\n  from\n    aws_vpc_network_acl,\n    jsonb_array_elements(entries) as att\n  where\n    att ->> 'Egress' = 'false' -- as per aws egress = false indicates the ingress\n    and (\n      att ->> 'CidrBlock' = '0.0.0.0/0'\n      or att ->> 'Ipv6CidrBlock' =  '::/0'\n    )\n    and att ->> 'RuleAction' = 'allow'\n    and (\n      (\n        att ->> 'Protocol' = '-1' -- all traffic\n        and att ->> 'PortRange' is null\n      )\n      or (\n        (att -> 'PortRange' ->> 'From') :: int <= 22\n        and (att -> 'PortRange' ->> 'To') :: int >= 22\n        and att ->> 'Protocol' in('6', '17')  -- TCP or UDP\n      )\n      or (\n        (att -> 'PortRange' ->> 'From') :: int <= 3389\n        and (att -> 'PortRange' ->> 'To') :: int >= 3389\n        and att ->> 'Protocol' in('6', '17')  -- TCP or UDP\n    )\n  )\n  group by\n    network_acl_id,\n    region,\n    account_id,\n    tags\n  order by\n    network_acl_id,\n    region,\n    account_id,\n    tags\n),\naws_vpc_network_acls as (\n  select\n    network_acl_id,\n    tags,\n    partition,\n    region,\n    account_id\n  from\n    aws_vpc_network_acl\n  order by\n    network_acl_id,\n    region,\n    account_id\n)\nselect\n  'arn:' || acl.partition || ':ec2:' || acl.region || ':' || acl.account_id || ':network-acl/' || acl.network_acl_id  as resource,\n  case\n    when bad_rules.network_acl_id is null then 'ok'\n    else 'alarm'\n  end as status,\n  case\n    when bad_rules.network_acl_id is null then acl.network_acl_id || ' does not allow ingress to port 22 or 3389 from 0.0.0.0/0 or ::/0.'\n    else acl.network_acl_id || ' contains ' || bad_rules.num_bad_rules || ' rule(s) allowing ingress to port 22 or 3389 from 0.0.0.0/0 or ::/0.'\n  end as reason\n  \n  \nfrom\n  aws_vpc_network_acls as acl\n  left join bad_rules on bad_rules.network_acl_id = acl.network_acl_id;\n"
  PrimaryTable: ""
  ListOfTables: []
  Parameters: []
Severity: low
Tags: {}
IntegrationType:
  - aws_cloud_account
