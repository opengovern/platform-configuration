ID: aws_ec2_instance_no_iam_role_with_database_management_write_access
Title: "EC2 instance IAM role should not allow database management write access"
Description: "This control ensures that EC2 instance IAM role does not allow database management write access."
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: "with iam_roles as (\n  select\n    r.arn as role_arn,\n    i.arn as intance_arn\n  from\n    aws_iam_role as r,\n    jsonb_array_elements_text(instance_profile_arns) as p\n    left join aws_ec2_instance as i on p = i.iam_instance_profile_arn\n  where\n    i.arn is not null\n), iam_role_with_permission as (\n  select\n    arn\n  from\n    aws_iam_role,\n    jsonb_array_elements(assume_role_policy_std -> 'Statement') as s,\n    jsonb_array_elements_text(s -> 'Principal' -> 'Service') as service,\n    jsonb_array_elements_text(s -> 'Action') as action\n  where\n    arn in (select role_arn from iam_roles)\n    and  s ->> 'Effect' = 'Allow'\n    and service = 'ec2.amazonaws.com'\n    and (\n      (action in ('rds:modifydbcluster','rds:modifydbclusterendpoint','rds:modifydbinstance','rds:modifydbsnapshot','rds:modifyglobalcluster','dynamodb:updateitem','dynamodb:updatetable','memorydb:updatecluster','neptune-db:resetdatabase','neptune-db:writedataviaquery','docdb-elastic:updatecluster','elasticache:modifycachecluster','cassandra:alter','cassandra:modify','qldb:executestatement','qldb:partiqlupdate','qldb:sendcommand','qldb:updateledger','redshift:modifycluster','redshift:modifyclustersnapshot','redshift:modifyendpointaccess','timestream:updatedatabase','timestream:updatetable','timestream:writerecords','*:*')\n      )\n    )\n)\nselect\n  i.arn as resource,\n  case\n    when p.arn is null then 'ok'\n    else 'alarm'\n  end status,\n  case\n    when p.arn is null then title || ' has no database management write level access.'\n    else title || ' has database management write level access.'\n  end as reason\n  \n  \nfrom\n  aws_ec2_instance as i\n  left join iam_roles as r on r.intance_arn = i.arn\n  left join iam_role_with_permission as p on p.arn = r.role_arn;\n"
  PrimaryTable: ""
  ListOfTables: []
  Parameters: []
Severity: low
Tags: {}
IntegrationType:
  - aws_cloud_account
