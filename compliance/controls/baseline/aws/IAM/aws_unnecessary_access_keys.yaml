Description: Ensure there is a maximum of one active access key pair available for any single IAM user.
ID: aws_unnecessary_access_keys
IntegrationType:
  - aws_cloud_account
Query:
  Engine: CloudQL-v0.0.1
  ListOfTables:
    - aws_iam_access_key
    - aws_iam_user
  Parameters: []
  PrimaryTable: aws_iam_user
  QueryToExecute: |
    SELECT
      u.name AS resource,
      u.platform_integration_id,
      u.platform_resource_id,
      CASE
        WHEN (SELECT COUNT(*) FROM aws_iam_access_key AS k WHERE u.name = k.user_name) > 1 THEN 'alarm'
        ELSE 'ok'
      END AS status,
      CASE
        WHEN (SELECT COUNT(*) FROM aws_iam_access_key AS k WHERE u.name = k.user_name) > 1 THEN u.name || ' user has more than one access keys'
        WHEN (SELECT COUNT(*) FROM aws_iam_access_key AS k WHERE u.name = k.user_name) = 1 THEN u.name || ' user has only one access key'
        ELSE u.name || ' user has no access key'
      END AS reason,
      u.region,
      u.account_id
    FROM
      aws_iam_user AS u
Severity: medium
Tags:
  platform_score_cloud_service_name:
    - AWS Identity and Access Management (IAM)
  platform_score_use_case:
    - Insecure Keys
  score_service_name:
    - AWS Identity and Access Management (IAM)
  score_tags:
    - Insecure Keys
Title: Unnecessary Access Keys