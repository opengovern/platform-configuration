ID: aws_s3_bucket_restrict_public_write_access
Title: "S3 buckets should prohibit public write access"
Description: "Manage access to resources in the AWS Cloud by only allowing authorized users, processes, and devices access to AWS Simple Storage Service (AWS S3) buckets."
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: "with public_acl as (\n  select\n    distinct name\n  from\n    aws_s3_bucket,\n    jsonb_array_elements(case jsonb_typeof(acl -> 'Grants') \n    when 'array' then acl -> 'Grants' \n    else '[]' end) as grants\n  where\n    (grants -> 'Grantee' ->> 'URI' = 'http://acs.amazonaws.com/groups/global/AllUsers'\n    or grants -> 'Grantee' ->> 'URI' = 'http://acs.amazonaws.com/groups/global/AuthenticatedUsers')\n    and (\n      grants ->> 'Permission' = 'FULL_CONTROL'\n      or grants ->> 'Permission' = 'WRITE_ACP'\n      or grants ->> 'Permission' = 'WRITE'\n    )\n), write_access_policy as (\n    select\n      distinct name\n    from\n      aws_s3_bucket,\n      jsonb_array_elements(case jsonb_typeof(policy_std -> 'Statement') \n    when 'array' then policy_std -> 'Statement' \n    else '[]' end ) as s,\n      jsonb_array_elements_text(case jsonb_typeof(s -> 'Action') \n    when 'array' then s -> 'Action'\n    else '[]' end) as action\n    where\n      s ->> 'Effect' = 'Allow'\n      and (\n        s -> 'Principal' -> 'AWS' = '[\"*\"]'\n        or s ->> 'Principal' = '*'\n      )\n      and (\n        action = '*'\n        or action = '*:*'\n        or action = 's3:*'\n        or action ilike 's3:put%'\n        or action ilike 's3:delete%'\n        or action ilike 's3:create%'\n        or action ilike 's3:update%'\n        or action ilike 's3:replicate%'\n        or action ilike 's3:restore%'\n      )\n)\nselect\n  b.arn as resource,\n  b.og_account_id as og_account_id,\n  b.og_resource_id as og_resource_id,\n  case\n    when (block_public_acls or a.name is null) and not bucket_policy_is_public then 'ok'\n    when (block_public_acls or a.name is null) and (bucket_policy_is_public and block_public_policy) then 'ok'\n    when bucket_policy_is_public and p.name is null then 'ok'\n    else 'alarm'\n  end status,\n  case\n    when (block_public_acls or a.name is null ) and not bucket_policy_is_public then b.title || ' not publicly writable.'\n    when (block_public_acls or a.name is null) and (bucket_policy_is_public and block_public_policy) then b.title || ' not publicly writable.'\n    when (block_public_acls or a.name is null) and (bucket_policy_is_public and p.name is null) then b.title || ' not publicly writable.'\n    else b.title || ' publicly writable.'\n  end reason\n\n  , b.region, b.account_id\nfrom\n  aws_s3_bucket as b\n  left join public_acl as a on b.name = a.name\n  left join write_access_policy as p on b.name = p.name;\n"
  PrimaryTable: aws_s3_bucket
  ListOfTables:
    - aws_s3_bucket
  Parameters: []
Severity: high
Tags:
  audit_manager_control_tower:
    - "true"
  category:
    - Compliance
  cis_controls_v8_ig1:
    - "true"
  cisa_cyber_essentials:
    - "true"
  fedramp_low_rev_4:
    - "true"
  fedramp_moderate_rev_4:
    - "true"
  ffiec:
    - "true"
  gxp_21_cfr_part_11:
    - "true"
  hipaa_final_omnibus_security_rule_2013:
    - "true"
  hipaa_security_rule_2003:
    - "true"
  nist_800_171_rev_2:
    - "true"
  nist_800_53_rev_4:
    - "true"
  nist_800_53_rev_5:
    - "true"
  nist_csf:
    - "true"
  pci_dss_v321:
    - "true"
  plugin:
    - aws
  rbi_cyber_security:
    - "true"
  service:
    - AWS/S3
  soc_2:
    - "true"
IntegrationTypeName:
  - aws_cloud
