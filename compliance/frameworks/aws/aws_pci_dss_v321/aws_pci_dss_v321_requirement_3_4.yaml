ID: aws_pci_dss_v321_requirement_3_4
Title: "Render PAN unreadable anywhere it is stored (including on portable digital
  media, backup media, and in logs) by using approaches like one-way hashes based
  on strong cryptography, truncation etc"
Description: "The following approaches should be used to render PAN unreadable anywhere
  it is stored: One-way hashes based on strong cryptography, (hash must be of the
  entire PAN), truncation (hashing cannot be used to replace the truncated segment
  of PAN), index tokens and pads (pads must be securely stored) and strong cryptography
  with associated key-management processes and procedures. Note: It is a relatively
  trivial effort for a malicious individual to reconstruct original PAN data if they
  have access to both the truncated and hashed version of a PAN. Where hashed and
  truncated versions of the same PAN are present in an entity's environment,
  additional controls must be in place to ensure that the hashed and truncated versions
  cannot be correlated to reconstruct the original PAN. PANs stored in primary storage
  (databases, or flat files such as text files spreadsheets) as well as non-primary
  storage (backup, audit logs, exception or troubleshooting logs) must all be protected.
  One-way hash functions based on strong cryptography can be used to render cardholder
  data unreadable. Hash functions are appropriate when there is no need to retrieve
  the original number (one-way hashes are irreversible). It is recommended, but not
  currently a requirement, that an additional, random input value be added to the
  cardholder data prior to hashing to reduce the feasibility of an attacker comparing
  the data against (and deriving the PAN from) tables of pre- computed hash values.
  The intent of truncation is to permanently remove a segment of PAN data so that
  only a portion (generally not to exceed the first six and last four digits) of the
  PAN is stored. An index token is a cryptographic token that replaces the PAN based
  on a given index for an unpredictable value. A one-time pad is a system in which
  a randomly generated private key is used only once to encrypt a message that is
  then decrypted using a matching one-time pad and key. The intent of strong cryptography
  (as defined in the PCI DSS and PA-DSS Glossary of Terms, Abbreviations, and Acronyms)
  is that the encryption be based on an industry-tested and accepted algorithm (not
  a proprietary or `home- grown` algorithm) with strong cryptographic keys. By correlating
  hashed and truncated versions of a given PAN, a malicious individual may easily
  derive the original PAN value. Controls that prevent the correlation of this data
  will help ensure that the original PAN remains unreadable."
SectionCode: "4"
Children:
- aws_pci_dss_v321_requirement_3_4_1
- aws_pci_dss_v321_requirement_3_4_a
- aws_pci_dss_v321_requirement_3_4_b
- aws_pci_dss_v321_requirement_3_4_d
Tags: {}
Enabled: false
AutoAssign: false
Controls:
- aws_apigateway_stage_cache_encryption_at_rest_enabled
- aws_cloudtrail_trail_logs_encrypted_with_kms_cmk
- aws_dax_cluster_encryption_at_rest_enabled
- aws_dynamodb_table_encrypted_with_kms
- aws_dynamodb_table_encryption_enabled
- aws_ebs_attached_volume_encryption_enabled
- aws_ec2_ebs_default_encryption_enabled
- aws_efs_file_system_encrypt_data_at_rest
- aws_eks_cluster_secrets_encrypted
- aws_es_domain_encryption_at_rest_enabled
- aws_log_group_encryption_at_rest_enabled
- aws_rds_db_instance_encryption_at_rest_enabled
- aws_rds_db_snapshot_encrypted_at_rest
- aws_redshift_cluster_encryption_logging_enabled
- aws_s3_bucket_default_encryption_enabled
- aws_s3_bucket_default_encryption_enabled_kms
- aws_sagemaker_endpoint_configuration_encryption_at_rest_enabled
- aws_sagemaker_notebook_instance_encryption_at_rest_enabled
- aws_sns_topic_encrypted_at_rest
TracksDriftEvents: false
