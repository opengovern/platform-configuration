Description: Ensure EC2 Amazon Machine Images (AMIs) aren't too old
ID: aws_ec2_ami_too_old
IntegrationType:
  - aws_cloud_account
Query:
  Engine: CloudQL-v0.0.1
  ListOfTables:
    - aws_backup_managed
    - aws_ebs_snapshot
    - aws_ec2_ami
  Parameters:
    - Key: awsEbsAmiAgeMaxDays
      Required: true
  PrimaryTable: aws_ec2_ami
  QueryToExecute: |
    SELECT 
      image_id AS resource,
      og_resource_id,
      og_account_id,
      CASE
        WHEN is_aws_backup_managed THEN 'skip'
        WHEN root_device_type <> 'ebs' THEN 'skip'
        WHEN NOW() - (creation_date)::timestamp > '{{.awsEbsAmiAgeMaxDays}} days'::interval THEN 'alarm'
        ELSE 'ok'
      END AS status,
      CASE
        WHEN is_aws_backup_managed THEN name || ' is managed by aws'
        WHEN root_device_type <> 'ebs' THEN name || ' is not stored in ebs'
        WHEN NOW() - (creation_date)::timestamp > '{{.awsEbsAmiAgeMaxDays}} days'::interval THEN name || ' needs to be restarted'
        ELSE name || ' launch time was not much time ago'
      END AS reason,
      CASE
        WHEN is_aws_backup_managed THEN 0
        WHEN root_device_type <> 'ebs' THEN 0
        WHEN NOW() - (creation_date)::timestamp > '{{.awsEbsAmiAgeMaxDays}} days'::interval THEN 
          (SELECT SUM(
              (SELECT cost 
               FROM pennywise_cost_estimate AS es 
               WHERE es.resource_type = 'aws::ec2::volumesnapshot' 
                 AND es.resource_id = s.arn 
               LIMIT 1)
             )
           FROM jsonb_array_elements(block_device_mappings) AS bdm
           LEFT JOIN aws_ebs_snapshot AS s 
           ON s.snapshot_id = bdm -> 'Ebs' ->> 'SnapshotId')
        ELSE 0
      END AS cost_optimization,
      region,
      account_id
    FROM 
      aws_ec2_ami
Severity: high
Tags:
  platform_score_cloud_service_name:
    - AWS EC2
  platform_score_use_case:
    - Lacking High Availability
  score_service_name:
    - AWS EC2
  score_tags:
    - Lacking High Availability
Title: EC2 AMI Too Old