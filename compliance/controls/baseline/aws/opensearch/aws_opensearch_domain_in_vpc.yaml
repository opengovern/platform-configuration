ID: aws_opensearch_domain_in_vpc
Title: "OpenSearch Domain In VPC"
Description: "Ensure that your Amazon OpenSearch domains are accessible only from AWS VPCs."
Connector:
- aws
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: |
    with public_subnets as (
      select
        distinct a -> 'SubnetId' as SubnetId
      from
        aws_vpc_route_table as t,
        jsonb_array_elements(associations) as a,
        jsonb_array_elements(routes) as r
      where
        r ->> 'DestinationCidrBlock' = '0.0.0.0/0'
        and r ->> 'GatewayId' like 'igw-%'
    ),
    opensearch_domain_with_public_subnet as (
      select
        arn
      from
        aws_opensearch_domain,
        jsonb_array_elements(vpc_options -> 'SubnetIds') as s
      where
        s in (
          select
            SubnetId
          from
            public_subnets
        )
    )
    select
      d.arn as resource,
      og_resource_id,
      og_account_id,
      case
        when d.vpc_options ->> 'VPCId' is null then 'alarm'
        when d.vpc_options ->> 'VPCId' is not null
        and p.arn is not null then 'alarm'
        else 'ok'
      end status,
      case
        when vpc_options ->> 'VPCId' is null then title || ' not in VPC.'
        when d.vpc_options ->> 'VPCId' is not null
        and p.arn is not null then title || ' attached to public subnet.'
        else title || ' in VPC ' || (vpc_options ->> 'VPCId') || '.'
      end reason,
      d.region,
      d.account_id
    from
      aws_opensearch_domain as d
      left join opensearch_domain_with_public_subnet as p on d.arn = p.arn;
  PrimaryTable: aws_opensearch_domain
  ListOfTables:
  - aws_opensearch_domain
  - aws_vpc_route_table
  Parameters: []
Severity: high
Tags:
  platform_score_cloud_service_name:
  - AWS OpenSearch Service
  platform_score_use_case:
  - Exposed Endpoints
  score_service_name:
  - AWS OpenSearch Service
  score_tags:
  - Exposed Endpoints
