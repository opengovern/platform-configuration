ID: aws_iam_users_unauthorized_to_edit_access_policies
Title: "IAM Users Unauthorized to Edit Access Policies"
Description: "Ensure AWS IAM users that are not authorized to edit IAM access policies are decommissioned.."
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: "WITH authorize_to_edit_policy AS (\n  SELECT\n    arn,\n    (select ARRAY_AGG(action) from jsonb_array_elements_text(s -> 'Action') AS action)\n  FROM\n      aws_iam_policy,\n      jsonb_array_elements(policy_std -> 'Statement') AS s\n  WHERE \n      ((select ARRAY_AGG(action) from jsonb_array_elements_text(s -> 'Action') AS action) @> ARRAY[\n          'iam:CreatePolicy',\n          'iam:CreatePolicyVersion',\n          'iam:DeleteGroupPolicy',\n          'iam:DeletePolicy',\n          'iam:DeletePolicyVersion',\n          'iam:DeleteRolePolicy',\n          'iam:DeleteUserPolicy',\n          'iam:DetachGroupPolicy',\n          'iam:DetachRolePolicy',\n          'iam:DetachUserPolicy',\n          'iam:PutGroupPolicy',\n          'iam:PutRolePolicy',\n          'iam:PutUserPolicy',\n          'iam:UpdateAssumeRolePolicy'\n      ]\n      and\n      (s ->> 'Effect') = 'Allow')\n      or \n      ((select ARRAY_AGG(action) from jsonb_array_elements_text(s -> 'Action') AS action) @> ARRAY[\n          'iam:*'\n      ]\n      and\n      (s ->> 'Effect') = 'Allow')\n  )\n\nSELECT\n  name AS resource,\n  og_account_id,\n  og_resource_id,\n  CASE\n    WHEN EXISTS(\n      select 1 from jsonb_array_elements_text(attached_policy_arns) as parn\n        LEFT JOIN authorize_to_edit_policy AS ep ON parn = ep.arn where ep.arn is not null\n    ) and ('{{.awsIamUsersAuthorizedToEditPolicy}}' not like '%' || user_id || '%') THEN 'alarm'\n    ELSE 'ok'\n  END AS status,\n  CASE\n    WHEN EXISTS(\n      select 1 from jsonb_array_elements_text(attached_policy_arns) as parn\n        LEFT JOIN authorize_to_edit_policy AS ep ON parn = ep.arn where ep.arn is not null\n    ) and ('{{.awsIamUsersAuthorizedToEditPolicy}}' not like '%' || user_id || '%') THEN 'this iam user is not authorized to edit policies'\n    ELSE 'ok'\n  END AS reason,\n  region, \n  account_id\nFROM\n  aws_iam_user\n"
  PrimaryTable: aws_iam_user
  ListOfTables:
    - aws_iam_policy
    - aws_iam_user
  Parameters:
    - Key: awsIamUsersAuthorizedToEditPolicy
      Required: true
Severity: high
Tags:
  platform_score_cloud_service_name:
    - AWS Identity and Access Management (IAM)
  platform_score_use_case:
    - Problem Identities
  score_service_name:
    - AWS Identity and Access Management (IAM)
  score_tags:
    - Problem Identities
IntegrationType:
  - aws_cloud_account
