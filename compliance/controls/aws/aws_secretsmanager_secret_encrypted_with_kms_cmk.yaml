ID: aws_secretsmanager_secret_encrypted_with_kms_cmk
Title: "Secrets Manager secrets should be encrypted using CMK"
Description: "Ensure that all secrets in AWS Secrets Manager are encrypted using the AWS managed key (aws/secretsmanager) or a customer managed key that was created in AWS Key Management Service (AWS KMS). The rule is compliant if a secret is encrypted using a customer managed key. This rule is non-compliant if a secret is encrypted using aws/secretsmanager."
Connector:
- aws
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: |-
    with encryption_keys as (
      select
        distinct s.arn,
        k.aliases as alias
      from
        aws_secretsmanager_secret as s
        left join aws_kms_key as k on k.arn = s.kms_key_id
      where
        jsonb_array_length(k.aliases) > 0
    )
    select
      s.arn as resource,
      s.kaytu_account_id as kaytu_account_id,
      s.kaytu_resource_id as kaytu_resource_id,
      case
        when kms_key_id is null
          or kms_key_id = 'alias/aws/secretsmanager'
          or k.alias @> '[{"AliasName":"alias/aws/secretsmanager"}]'then 'alarm'
        else 'ok'
      end as status,
      case
        when kms_key_id is null then title || ' not encrypted with KMS.'
        when kms_key_id = 'alias/aws/secretsmanager' or k.alias @> '[{"AliasName":"alias/aws/secretsmanager"}]' then title || ' encrypted with AWS managed key.'
        else title || ' encrypted with CMK.'
      end as reason
      
      , region, account_id
    from
      aws_secretsmanager_secret as s
      left join encryption_keys as k on s.arn = k.arn;
  PrimaryTable: aws_secretsmanager_secret
  ListOfTables:
  - aws_kms_key
  - aws_secretsmanager_secret
  Parameters: []
Severity: high
Tags:
  category:
  - Compliance
  gxp_21_cfr_part_11:
  - "true"
  gxp_eu_annex_11:
  - "true"
  hipaa_final_omnibus_security_rule_2013:
  - "true"
  nist_800_53_rev_5:
  - "true"
  nist_csf:
  - "true"
  pci_dss_v321:
  - "true"
  plugin:
  - aws
  service:
  - AWS/SecretsManager
