ID: aws_iam_policy_custom_attached_no_star_star
Title: "IAM policies should not allow full '*' administrative privileges"
Description: "This control checks whether the default version of IAM policies (also known as customer managed policies) has administrator access that includes a statement with 'Effect': 'Allow' with 'Action': '*' over 'Resource': '*'. The control only checks the customer managed policies that you create. It does not check inline and AWS managed policies."
Connector:
- aws
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: |
    -- This query checks the customer managed policies having * access and attached to IAM resource(s)
    with star_access_policies as (
      select
        arn,
        count(*) as num_bad_statements
      from
        aws_iam_policy,
        jsonb_array_elements(policy_std -> 'Statement') as s,
        jsonb_array_elements_text(s -> 'Resource') as resource,
        jsonb_array_elements_text(s -> 'Action') as action
      where
        not is_aws_managed
        and s ->> 'Effect' = 'Allow'
        and resource = '*'
        and (
          (action = '*'
          or action = '*:*'
          )
        )
        and is_attached
      group by arn
    )
    select
      p.arn as resource,
      p.og_account_id as og_account_id,
      p.og_resource_id as og_resource_id,
      case
        when s.arn is null then 'ok'
        else 'alarm'
      end status,
      p.name || ' contains ' || coalesce(s.num_bad_statements,0)  || ' statements that allow action "*" on resource "*".' as reason
      
      , p.account_id
    from
      aws_iam_policy as p
      left join star_access_policies as s on p.arn = s.arn
    where
      not p.is_aws_managed;
  PrimaryTable: aws_iam_policy
  ListOfTables:
  - aws_iam_policy
  - aws_managed
  Parameters: []
Severity: high
Tags:
  aws_foundational_security:
  - "true"
  category:
  - Compliance
  foundational_security_category:
  - secure_access_management
  foundational_security_item_id:
  - iam_1
  plugin:
  - aws
  service:
  - AWS/IAM
