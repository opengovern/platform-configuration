ID: aws_iam_users_with_api_keys_should_have_keys_rotated_every_x_days
Title: "IAM Users with API Keys should have keys rotated every X days"
Description: "IAM Users with API Keys should have keys rotated every X days"
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: "select\n  user_name as resource,\n  og_account_id as og_account_id,\n  og_resource_id as og_resource_id,\n  (date(current_timestamp) - date(access_key_1_last_rotated)),\n  (date(current_timestamp) - date(access_key_2_last_rotated)),\n  case\n    when \n      (access_key_1_active and\n      (date(current_timestamp) - date(access_key_1_last_rotated)) > '{{.awsIamUserKeyRotateDays}}'::int) or\n      (access_key_2_active and\n      (date(current_timestamp) - date(access_key_2_last_rotated)) > '{{.awsIamUserKeyRotateDays}}'::int) then 'alarm'\n    else 'ok'\n  end as status,\n  case\n    when (access_key_1_active and\n      (date(current_timestamp) - date(access_key_1_last_rotated)) > '{{.awsIamUserKeyRotateDays}}'::int) or\n      (access_key_2_active and\n      (date(current_timestamp) - date(access_key_2_last_rotated)) > '{{.awsIamUserKeyRotateDays}}'::int) then \n        case\n          when (access_key_1_last_rotated is null) then 'key last rotated in ' || (date(current_timestamp) - date(access_key_2_last_rotated)) || ' days'\n          when (access_key_2_last_rotated is null) then 'key last rotated in ' || (date(current_timestamp) - date(access_key_1_last_rotated)) || ' days'\n          else 'key last rotated in ' || greatest((date(current_timestamp) - date(access_key_1_last_rotated)), (date(current_timestamp) - date(access_key_2_last_rotated))) || ' days'\n        end\n    else 'keys rotated recently'\n  end as reason\n  , region, account_id\nfrom\n  aws_iam_credential_report\n"
  PrimaryTable: aws_iam_credential_report
  ListOfTables:
    - aws_iam_credential_report
  Parameters:
    - Key: awsIamUserKeyRotateDays
      Required: true
Severity: medium
Tags:
  category:
    - Compliance
  score_service_name:
    - AWS Identity and Access Management (IAM)
IntegrationTypeName:
  - aws_cloud
