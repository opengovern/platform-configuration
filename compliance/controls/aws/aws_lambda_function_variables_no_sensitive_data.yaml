ID: aws_lambda_function_variables_no_sensitive_data
Title: "Lambda functions variable should not have any sensitive data"
Description: "Ensure functions environment variables is not having any sensitive data. Leveraging Secrets Manager enables secure provisioning of database credentials to Lambda functions while also ensuring the security of databases. This approach eliminates the need to hardcode secrets in code or pass them through environmental variables. Additionally, Secrets Manager facilitates the secure retrieval of credentials for establishing connections to databases and performing queries, enhancing overall security measures."
Connector:
- aws
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: |-
    with function_vaiable_with_sensitive_data as (
    select
      distinct arn,
      name
    from
      aws_lambda_function
      join jsonb_each_text(environment_variables) d on true
    where
      d.key ilike any (array['%pass%', '%secret%', '%token%', '%key%'])
      or d.key ~ '(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]'
      or d.value ilike any (array['%pass%', '%secret%', '%token%', '%key%'])
      or d.value ~ '(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]'
    )
    select
      f.arn as resource,
      f.kaytu_account_id as kaytu_account_id,
      f.kaytu_resource_id as kaytu_resource_id,
      case
        when b.arn is null then 'ok'
        else 'alarm'
      end as status,
      case
        when b.arn is null then f.title || ' has no sensitive data.'
        else f.title || ' has potential sensitive data.'
      end as reason
      
      
    from
      aws_lambda_function as f
      left join function_vaiable_with_sensitive_data b on f.arn = b.arn;
  PrimaryTable: aws_lambda_function
  ListOfTables:
  - aws_lambda_function
  Parameters: []
Severity: low
Tags: {}
