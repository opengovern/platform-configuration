Description: Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for unauthorized API calls.
ID: aws_cis_v120_3_1
IntegrationType:
  - aws_cloud_account
Query:
  Engine: CloudQL-v0.0.1
  ListOfTables: []
  Parameters: []
  PrimaryTable: ""
  QueryToExecute: |
    WITH trails AS (
      SELECT
        trail.account_id,
        trail.name AS trail_name,
        trail.is_logging,
        SPLIT_PART(trail.log_group_arn, ':', 7) AS log_group_name
      FROM
        aws_cloudtrail_trail AS trail,
        JSONB_ARRAY_ELEMENTS(trail.event_selectors) AS se
      WHERE
        trail.is_multi_region_trail IS TRUE
        AND trail.is_logging
        AND se ->> 'ReadWriteType' = 'All'
        AND trail.log_group_arn IS NOT NULL
      ORDER BY
        trail_name
    ),
    alarms AS (
      SELECT
        metric_name,
        action_arn AS topic_arn
      FROM
        aws_cloudwatch_alarm,
        JSONB_ARRAY_ELEMENTS_TEXT(aws_cloudwatch_alarm.alarm_actions) AS action_arn
      ORDER BY
        metric_name
    ),
    topic_subscriptions AS (
      SELECT
        subscription_arn,
        topic_arn
      FROM
        aws_sns_topic_subscription
      ORDER BY
        subscription_arn
    ),
    metric_filters AS (
      SELECT
        filter.name AS filter_name,
        filter_pattern,
        log_group_name,
        metric_transformation_name
      FROM
        aws_cloudwatch_log_metric_filter AS filter
      WHERE
        filter.filter_pattern ~ '\$.errorCode\s*=\s*"*UnauthorizedOperation".+\$.errorCode\s*=\s*"AccessDenied*".+\$.sourceIPAddress\s*!=\s*"delivery.logs.amazonaws.com".+\$.eventName\s*!=\s*"HeadBucket"'
      ORDER BY
        filter_name
    ),
    filter_data AS (
      SELECT
        t.account_id,
        t.trail_name,
        f.filter_name
      FROM
        trails AS t
      JOIN
        metric_filters AS f ON f.log_group_name = t.log_group_name
      JOIN
        alarms AS alarm ON alarm.metric_name = f.metric_transformation_name
      JOIN
        topic_subscriptions AS subscription ON subscription.topic_arn = alarm.topic_arn
    )
    SELECT
      DISTINCT 'arn:' || a.partition || ':::' || a.account_id AS resource,
      CASE
        WHEN f.trail_name IS NULL THEN 'alarm'
        ELSE 'ok'
      END AS status,
      CASE
        WHEN f.trail_name IS NULL THEN 'No log metric filter and alarm exist for unauthorized API calls.'
        ELSE filter_name || ' forwards events for unauthorized API calls.'
      END AS reason
    FROM
      aws_account AS a
    LEFT JOIN filter_data AS f ON a.account_id = f.account_id;
Severity: low
Tags: {}
Title: 3.1 Ensure a log metric filter and alarm exist for unauthorized API calls