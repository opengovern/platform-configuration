id: aws_ec2_ami_not_older_than_n_days
title: ensure_images_ami_are_not_older_than_n_days
description: ensure_that_your_amis_are_not_older_than_a_configured_maximum_age
integration_type:
  - aws_cloud_account
policy:
  language: rego
  parameters:
    - key: snapshot_max_age
      required: true
      default_value: "90"
  primary_table: aws_ec2_ami
  example_data:
    - |
      package opencomply

      # Example data returning a static list of AMI objects.
      aws_ec2_ami(params) = result {
        result := [
          {
            "image_id":               "ami-abc123",
            "platform_integration_id": "my-integration",
            "platform_resource_id":    "my-resource",
            "title":                   "Example AMI (80 days old)",
            "creation_date":           time.now_ns() - (80 * 24 * 60 * 60 * 1e9)
          },
          {
            "image_id":               "ami-xyz789",
            "platform_integration_id": "my-integration-2",
            "platform_resource_id":    "my-resource-2",
            "title":                   "Old AMI (120 days old)",
            "creation_date":           time.now_ns() - (120 * 24 * 60 * 60 * 1e9)
          }
        ]
      }
  definition:
    - |
      package aws_ec2_ami_not_older_than_n_days

      import future.keywords.in
      import data.opencomply

      # Define the result rule
      result[obj] {
        some ami in opencomply.aws_ec2_ami({})

        obj := {
          "resource":               ami.image_id,
          "platform_integration_id": ami.platform_integration_id,
          "platform_resource_id":    ami.platform_resource_id,
          "status":                  status(ami.creation_date),
          "reason": sprintf(
            "%s created %s (%d days).", [
              ami.title,
              time.format(ami.creation_date),
              days_since_creation(ami.creation_date)
            ]
          )
        }
      }

      # Determine the status based on creation_date vs. snapshot_max_age (in days)
      status(creation_date) = "ok" {
        snapshot_age := to_number(input.params.snapshot_max_age)
        creation_date >= time.now_ns() - (snapshot_age * 24 * 60 * 60 * 1e9)
      }
      status(creation_date) = "alarm" {
        snapshot_age := to_number(input.params.snapshot_max_age)
        creation_date < time.now_ns() - (snapshot_age * 24 * 60 * 60 * 1e9)
      }

      # Calculate days since creation
      days_since_creation(creation_date) = days {
        now := time.now_ns()
        days := floor((now - creation_date) / (24 * 60 * 60 * 1e9))
      }
  trigger: |
    data.aws_ec2_ami_not_older_than_n_days.result
severity: low
tags: {}
