ID: azure_monitor_diagnostic_settings_captures_proper_categories
Title: "Ensure Diagnostic Setting captures appropriate categories"
Description: "A Diagnostic Setting must exist. If a Diagnostic Setting does not exist, the navigation and options within this recommendation will not be available. Please review the recommendation at the beginning of this subsection titled: 'Ensure that a 'Diagnostic Setting' exists.' The diagnostic setting should be configured to log the appropriate activities from the control/management plane."
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: |
    with enabled_settings as (
      select
        name,
        id,
        og_account_id as og_account_id,
        og_resource_id as og_resource_id,
        _ctx,
        resource_group,
        subscription_id,
        count(*) filter (where l ->> 'enabled' = 'true'
          and l ->> 'category' in ('Administrative', 'Security', 'Alert', 'Policy')
        ) as valid_category_count,
        string_agg(l ->> 'category', ', ') filter (where l ->> 'enabled' = 'true'
          and l ->> 'category' in ('Administrative', 'Security', 'Alert', 'Policy')
        ) as valid_categories
      from
        azure_diagnostic_setting,
        jsonb_array_elements(logs) as l
      group by
        name,
        id,
        og_account_id,
        og_resource_id,
        _ctx,
        resource_group,
        subscription_id
    )
    select
      sett.id as resource,
      sett.og_account_id as og_account_id,
      sett.og_resource_id as og_resource_id,
      case
        when valid_category_count = 4 then 'ok'
        else 'alarm'
      end as status,
      case
        when valid_category_count = 4
          then name || ' logs enabled for required categories administrative, security, alert and policy.'
        when valid_category_count > 0
          then sett.name || ' logs enabled for ' || valid_categories || ' categories.'
          else sett.name || ' logs not enabled for categories administrative, security, alert and policy.'
      end as reason
      , sett.resource_group as resource_group
      , sub.display_name as subscription
    from
      enabled_settings sett,
      azure_subscription sub
    where
      sub.subscription_id = sett.subscription_id;
  PrimaryTable: azure_diagnostic_setting
  ListOfTables:
    - azure_diagnostic_setting
    - azure_subscription
  Parameters: []
Severity: medium
Tags:
  category:
    - Compliance
  cis:
    - "true"
  cis_item_id:
    - 5.1.2
  cis_level:
    - "1"
  cis_section_id:
    - "5.1"
  cis_type:
    - automated
  cis_version:
    - v1.3.0
  plugin:
    - azure
  service:
    - Azure/Monitor
Integration_Type_Name:
  - azure_subscription
