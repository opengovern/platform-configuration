ID: aws_use_aws_managed_policy_to_manage_aws_resources
Title: "Use AWS-managed policy to manage AWS resources"
Description: "Ensure that Amazon EKS clusters implement the \"AmazonEKSClusterPolicy\" managed policy."
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: |
    select
      ng.nodegroup_name as resource,
      ng.og_account_id,
      ng.og_resource_id,
      case
        when attached_policy_arns::text like '%arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly%' then 'ok'
        else 'alarm'
      end as status,
      case
        when attached_policy_arns::text like '%arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly%' then 'node group policies contains AmazonEC2ContainerRegistryReadOnly'
        else 'node group policies does not contain AmazonEC2ContainerRegistryReadOnly'
      end as reason,
      ng.region,
      ng.account_id
    from
      aws_eks_node_group as ng
      left join aws_iam_role as r on r.arn = ng.node_role
  PrimaryTable: aws_eks_node_group
  ListOfTables:
    - aws_eks_node_group
    - aws_iam_role
  Parameters: []
Severity: high
Tags:
  platform_score_cloud_service_name:
    - AWS Elastic Kubernetes Service (EKS)
  platform_score_use_case:
    - Lacking High Availability
  score_service_name:
    - AWS Elastic Kubernetes Service (EKS)
  score_tags:
    - Lacking High Availability
Integration_Type_Name:
  - aws_cloud
