Description: Ensure that all access to the ECS Execute Command action is approved
ID: aws_approved_ecs_execute_command_access
IntegrationType:
  - aws_cloud_account
Query:
  Engine: CloudQL-v0.0.1
  ListOfTables:
    - aws_iam_group
    - aws_iam_policy
    - aws_iam_role
    - aws_iam_user
  Parameters:
    - Key: awsEcsExecuteCommandIamArns
      Required: true
  PrimaryTable: ""
  QueryToExecute: |
    SELECT
      name AS resource,
      og_account_id,
      og_resource_id,
      'aws_iam_user' AS og_table_name,
      CASE
        WHEN (inline_policies_std::text LIKE '%ecs:ExecuteCommand%')
          AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
        THEN 'alarm'
        WHEN EXISTS (
            SELECT 1
            FROM jsonb_array_elements_text(attached_policy_arns) AS ap
            LEFT JOIN aws_iam_policy AS p ON p.arn = ap
            WHERE p.policy::text LIKE '%ecs:ExecuteCommand%'
          )
          AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
        THEN 'alarm'
        ELSE 'ok'
      END AS status,
      CASE
        WHEN (inline_policies_std::text LIKE '%ecs:ExecuteCommand%')
          AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
        THEN 'user is not authorized to do this ecs action'
        WHEN EXISTS (
            SELECT 1
            FROM jsonb_array_elements_text(attached_policy_arns) AS ap
            LEFT JOIN aws_iam_policy AS p ON p.arn = ap
            WHERE p.policy::text LIKE '%ecs:ExecuteCommand%'
          )
          AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
        THEN 'user is not authorized to do this ecs action'
        ELSE 'ok'
      END AS reason,
      region,
      account_id
    FROM
      aws_iam_user

    UNION ALL

    SELECT
      name AS resource,
      og_account_id,
      og_resource_id,
      'aws_iam_role' AS og_table_name,
      CASE
        WHEN (inline_policies_std::text LIKE '%ecs:ExecuteCommand%')
          AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
        THEN 'alarm'
        WHEN EXISTS (
            SELECT 1
            FROM jsonb_array_elements_text(attached_policy_arns) AS ap
            LEFT JOIN aws_iam_policy AS p ON p.arn = ap
            WHERE p.policy::text LIKE '%ecs:ExecuteCommand%'
          )
          AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
        THEN 'alarm'
        ELSE 'ok'
      END AS status,
      CASE
        WHEN (inline_policies_std::text LIKE '%ecs:ExecuteCommand%')
          AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
        THEN 'user is not authorized to do this ecs action'
        WHEN EXISTS (
            SELECT 1
            FROM jsonb_array_elements_text(attached_policy_arns) AS ap
            LEFT JOIN aws_iam_policy AS p ON p.arn = ap
            WHERE p.policy::text LIKE '%ecs:ExecuteCommand%'
          )
          AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
        THEN 'user is not authorized to do this ecs action'
        ELSE 'ok'
      END AS reason,
      region,
      account_id
    FROM
      aws_iam_role

    UNION ALL

    SELECT
      name AS resource,
      og_account_id,
      og_resource_id,
      'aws_iam_group' AS og_table_name,
      CASE
        WHEN (inline_policies_std::text LIKE '%ecs:ExecuteCommand%')
          AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
        THEN 'alarm'
        WHEN EXISTS (
            SELECT 1
            FROM jsonb_array_elements_text(attached_policy_arns) AS ap
            LEFT JOIN aws_iam_policy AS p ON p.arn = ap
            WHERE p.policy::text LIKE '%ecs:ExecuteCommand%'
          )
          AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
        THEN 'alarm'
        ELSE 'ok'
      END AS status,
      CASE
        WHEN (inline_policies_std::text LIKE '%ecs:ExecuteCommand%')
          AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
        THEN 'user is not authorized to do this ecs action'
        WHEN EXISTS (
            SELECT 1
            FROM jsonb_array_elements_text(attached_policy_arns) AS ap
            LEFT JOIN aws_iam_policy AS p ON p.arn = ap
            WHERE p.policy::text LIKE '%ecs:ExecuteCommand%'
          )
          AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
        THEN 'user is not authorized to do this ecs action'
        ELSE 'ok'
      END AS reason,
      region,
      account_id
    FROM
      aws_iam_group
Severity: medium
Tags:
  platform_score_cloud_service_name:
    - AWS Identity and Access Management (IAM)
  platform_score_use_case:
    - Problem Identities
  score_service_name:
    - AWS Identity and Access Management (IAM)
  score_tags:
    - Problem Identities
Title: Approved ECS Execute Command Access