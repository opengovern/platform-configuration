ID: aws_config_enabled_all_regions
Title: "AWS Config should be enabled"
Description: "This control checks whether AWS Config is enabled in the account for the local Region and is recording all resources."
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: "with global_recorders as (\n  select\n    count(*) as global_config_recorders\n  from\n    aws_config_configuration_recorder\n  where\n    recording_group -> 'IncludeGlobalResourceTypes' = 'true'\n    and recording_group -> 'AllSupported' = 'true'\n    and status ->> 'Recording' = 'true'\n    and status ->> 'LastStatus' = 'SUCCESS'\n),\nregions as (\n  select\n    'arn:aws::' || a.region || ':' || a.account_id as resource,\n    a.og_account_id as og_account_id,\n    a.og_resource_id as og_resource_id,\n    case\n      when\n        g.global_config_recorders >= 1\n        and status ->> 'Recording' = 'true'\n        and status ->> 'LastStatus' = 'SUCCESS'\n      then 0\n      when a.opt_in_status = 'not-opted-in' then 1\n      else 2\n    end as status,\n    a.region, a.account_id\n  from\n    global_recorders as g,\n    aws_region as a\n    left join aws_config_configuration_recorder as r on r.account_id = a.account_id and r.region = a.name\n),\nresults as (\n  SELECT \n    account_id AS resource,\n    og_account_id as og_account_id,\n    og_account_id as og_resource_id,\n    case\n      when max(status) = 2 then 'alarm'\n      when max(status) = 1 then 'skip'\n      when max(status) = 0 then 'ok'\n    end as status,\n    case\n      when max(status) = 2 then 'AWS Config is not enabled for this account on regions: [' || string_agg(region, ',') || ']' \n      when max(status) = 1 then 'Account is not opted in regions: [' || string_agg(region, ',') || ']'\n      when max(status) = 0 then 'AWS Config is enabled for this account on regions: [' || string_agg(region, ',') || ']'\n      end as reason\n  FROM regions\n  GROUP BY account_id, og_account_id\n)\nSELECT \n  r.resource AS resource,\n  r.og_account_id as og_account_id,\n  a.og_resource_id as og_resource_id,\n  r.status as status,\n  r.reason as reason\nFROM results as r JOIN aws_account as a ON r.og_account_id = a.og_account_id\n"
  PrimaryTable: aws_account
  ListOfTables:
    - aws_account
    - aws_config_configuration_recorder
    - aws_region
  Parameters: []
Severity: high
Tags:
  category:
    - Compliance
  cis:
    - "true"
  cis_item_id:
    - "2.5"
  cis_level:
    - "1"
  cis_section_id:
    - "2"
  cis_type:
    - scored
  cis_version:
    - v1.2.0
  plugin:
    - aws
  service:
    - AWS/Config
IntegrationType:
  - aws_cloud_account
