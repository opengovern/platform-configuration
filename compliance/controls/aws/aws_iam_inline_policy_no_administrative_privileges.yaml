ID: aws_iam_inline_policy_no_administrative_privileges
Title: "IAM inline policy should not have administrative privileges"
Description: "Ensure that no inline IAM policies exist that allow administrative privileges."
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: |-
    with full_administrative_privilege_policies as (
      select
        arn,
        inline_policies_std,
        name,
        account_id,
        region,
        _ctx,
        'iam_user' as type,
        og_account_id,
        og_resource_id
      from
        aws_iam_user
      union
      select
        arn,
        inline_policies_std,
        name,
        account_id,
        region,
        _ctx,
        'iam_role' as type,
        og_account_id,
        og_resource_id
      from
        aws_iam_role
      union
      select
        arn,
        inline_policies_std,
        name,
        account_id,
        region,
        _ctx,
        'iam_group' as type,
        og_account_id,
        og_resource_id
      from
        aws_iam_group
    ),
    bad_policies as (
      select
        arn,
        count(*) as statements_num
      from
        full_administrative_privilege_policies,
        jsonb_array_elements(inline_policies_std) as policy_std,
        jsonb_array_elements(policy_std -> 'PolicyDocument' -> 'Statement') as s,
        jsonb_array_elements_text(s -> 'Resource') as resource,
        jsonb_array_elements_text(s -> 'Action') as action
      where
        s ->> 'Effect' = 'Allow'
        and resource = '*'
        and (
          (action = '*'
          or action = '*:*'
          )
        )
      group by
        arn
    )
    select
      p.arn as resource,
      p.og_account_id as og_account_id,
      p.og_resource_id as og_resource_id,
      case
        when bad.arn is null then 'ok'
        else 'alarm'
      end status,
      p.name || ' contains ' || coalesce(bad.statements_num,0)  ||
        ' statements that allow action "*" on resource "*".' as reason

    from
      full_administrative_privilege_policies as p
      left join bad_policies as bad on p.arn = bad.arn;
  PrimaryTable: aws_iam_user
  ListOfTables:
    - aws_iam_user
    - aws_iam_role
    - aws_iam_group
  Parameters: []
Severity: low
Tags: {}
Integration_Type_Name:
  - aws_cloud
