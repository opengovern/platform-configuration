ID: aws_elbv2_alb_security_group
Title: "ELBv2 ALB Security Group"
Description: "Ensure ELBv2 load balancers have secure and valid security groups."
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: "WITH sg AS (\n  SELECT\n    group_id,\n    group_name,\n    ARRAY_AGG('(' || (p ->> 'ToPort') || ',' || lower(p ->> 'IpProtocol') || ')') AS ports_and_protocols\n  FROM\n    aws_vpc_security_group,\n    jsonb_array_elements(ip_permissions) as p\n  GROUP BY\n    group_id, group_name\n), lbl AS (\n  SELECT \n    load_balancer_arn,\n    ARRAY_AGG('(' || port || ',' || lower(protocol) || ')') AS ports_and_protocols\n  FROM \n    aws_ec2_load_balancer_listener\n  GROUP BY \n    load_balancer_arn\n)\nSELECT\n  al.name as resource,\n  al.og_account_id,\n  al.og_resource_id,\n  sg.ports_and_protocols,\n  lbl.ports_and_protocols,\n  CASE\n    WHEN sg.ports_and_protocols <@ lbl.ports_and_protocols THEN 'ok'\n    ELSE 'alarm'\n  END as status,\n  CASE\n    WHEN sg.ports_and_protocols <@ lbl.ports_and_protocols THEN al.name || ' is secure'\n    ELSE al.name || ' is not secure'\n  END as reason,\n  al.region,\n  al.account_id\nFROM\n  aws_ec2_application_load_balancer as al\n  CROSS JOIN LATERAL jsonb_array_elements_text(al.security_groups) as sgid\n  LEFT JOIN sg ON sgid = sg.group_id\n  LEFT JOIN lbl ON al.arn = lbl.load_balancer_arn;\n"
  PrimaryTable: aws_ec2_application_load_balancer
  ListOfTables:
    - aws_ec2_application_load_balancer
    - aws_ec2_load_balancer_listener
    - aws_vpc_security_group
  Parameters: []
Severity: high
Tags:
  platform_score_cloud_service_name:
    - AWS Elastic Load Balancing V2 (ELBv2)
  platform_score_use_case:
    - Exposed Endpoints
  score_service_name:
    - AWS Elastic Load Balancing V2 (ELBv2)
  score_tags:
    - Exposed Endpoints
IntegrationTypeName:
  - aws_cloud_account
