ID: aws_approved_ecs_execute_command_access
Title: "Approved ECS Execute Command Access"
Description: "Ensure that all access to the ECS Execute Command action is approved"
Connector:
- aws
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: |
    SELECT
      name AS resource,
      kaytu_account_id,
      kaytu_resource_id,
     'aws_iam_user' as kaytu_table_name,
      CASE
        WHEN (inline_policies_std::text like '%ecs:ExecuteCommand%') and
        ('{{.awsEcsExecuteCommandIamArns}}' not like '%' || arn || '%') THEN 'alarm'
        WHEN exists(
          select 1 from jsonb_array_elements_text(attached_policy_arns) as ap left join aws_iam_policy as p on p.arn = ap
          where p.policy::text like '%ecs:ExecuteCommand%'
        ) and
        ('{{.awsEcsExecuteCommandIamArns}}' not like '%' || arn || '%') THEN 'alarm'
        ELSE 'ok'
      END AS status,
      CASE
        WHEN (inline_policies_std::text like '%ecs:ExecuteCommand%') and
        ('{{.awsEcsExecuteCommandIamArns}}' not like '%' || arn || '%') THEN 'user is not authorized to do this ecs action'
        WHEN exists(
          select 1 from jsonb_array_elements_text(attached_policy_arns) as ap left join aws_iam_policy as p on p.arn = ap
          where p.policy::text like '%ecs:ExecuteCommand%'
        ) and
        ('{{.awsEcsExecuteCommandIamArns}}' not like '%' || arn || '%') THEN 'user is not authorized to do this ecs action'
        ELSE 'ok'
      END AS reason,
      region, 
      account_id
    FROM
      aws_iam_user
    
    UNION ALL
    
    SELECT
      name AS resource,
      kaytu_account_id,
      kaytu_resource_id,
      'aws_iam_role' as kaytu_table_name,
      CASE
        WHEN (inline_policies_std::text like '%ecs:ExecuteCommand%') and
        ('{{.awsEcsExecuteCommandIamArns}}' not like '%' || arn || '%') THEN 'alarm'
        WHEN exists(
          select 1 from jsonb_array_elements_text(attached_policy_arns) as ap left join aws_iam_policy as p on p.arn = ap
          where p.policy::text like '%ecs:ExecuteCommand%'
        ) and
        ('{{.awsEcsExecuteCommandIamArns}}' not like '%' || arn || '%') THEN 'alarm'
        ELSE 'ok'
      END AS status,
      CASE
        WHEN (inline_policies_std::text like '%ecs:ExecuteCommand%') and
        ('{{.awsEcsExecuteCommandIamArns}}' not like '%' || arn || '%') THEN 'user is not authorized to do this ecs action'
        WHEN exists(
          select 1 from jsonb_array_elements_text(attached_policy_arns) as ap left join aws_iam_policy as p on p.arn = ap
          where p.policy::text like '%ecs:ExecuteCommand%'
        ) and
        ('{{.awsEcsExecuteCommandIamArns}}' not like '%' || arn || '%') THEN 'user is not authorized to do this ecs action'
        ELSE 'ok'
      END AS reason,
      region, 
      account_id
    FROM
      aws_iam_role
    
    UNION ALL
    
    SELECT
      name AS resource,
      kaytu_account_id,
      kaytu_resource_id,
      'aws_iam_group' as kaytu_table_name,
      CASE
        WHEN (inline_policies_std::text like '%ecs:ExecuteCommand%') and
        ('{{.awsEcsExecuteCommandIamArns}}' not like '%' || arn || '%') THEN 'alarm'
        WHEN exists(
          select 1 from jsonb_array_elements_text(attached_policy_arns) as ap left join aws_iam_policy as p on p.arn = ap
          where p.policy::text like '%ecs:ExecuteCommand%'
        ) and
        ('{{.awsEcsExecuteCommandIamArns}}' not like '%' || arn || '%') THEN 'alarm'
        ELSE 'ok'
      END AS status,
      CASE
        WHEN (inline_policies_std::text like '%ecs:ExecuteCommand%') and
        ('{{.awsEcsExecuteCommandIamArns}}' not like '%' || arn || '%') THEN 'user is not authorized to do this ecs action'
        WHEN exists(
          select 1 from jsonb_array_elements_text(attached_policy_arns) as ap left join aws_iam_policy as p on p.arn = ap
          where p.policy::text like '%ecs:ExecuteCommand%'
        ) and
        ('{{.awsEcsExecuteCommandIamArns}}' not like '%' || arn || '%') THEN 'user is not authorized to do this ecs action'
        ELSE 'ok'
      END AS reason,
      region, 
      account_id
    FROM
      aws_iam_group
  PrimaryTable: ""
  ListOfTables:
  - aws_iam_group
  - aws_iam_policy
  - aws_iam_role
  - aws_iam_user
  Parameters:
    - Key: awsEcsExecuteCommandIamArns
      Required: true
Severity: medium
Tags:
  platform_score_cloud_service_name:
  - AWS Identity and Access Management (IAM)
  platform_score_use_case:
  - Problem Identities
  score_service_name:
  - AWS Identity and Access Management (IAM)
  score_tags:
  - Problem Identities
