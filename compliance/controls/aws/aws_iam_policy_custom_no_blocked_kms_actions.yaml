ID: aws_iam_policy_custom_no_blocked_kms_actions
Title: "Ensure managed IAM policies should not allow blocked actions on KMS keys"
Description: "Checks if the managed AWS Identity and Access Management (IAM) policies that you create do not allow blocked actions on AWS KMS keys. The rule is non - compliant if any blocked action is allowed on AWS KMS keys by the managed IAM policy."
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: "with kms_blocked_actions as (\n  select\n    arn,\n    count(*) as statements_num\n  from\n    aws_iam_policy,\n    jsonb_array_elements(policy_std -> 'Statement') as s,\n    jsonb_array_elements_text(s -> 'Resource') as resource,\n    jsonb_array_elements_text(s -> 'Action') as action\n  where\n    not is_aws_managed\n    and s ->> 'Effect' = 'Allow'\n    and action like any(array['kms:decrypt', 'kms:reencryptfrom'])\n  group by\n    arn\n)\nselect\n  p.arn as resource,\n  p.og_account_id as og_account_id,\n  p.og_resource_id as og_resource_id,\n  case\n    when w.arn is null then 'ok'\n    else 'alarm'\n  end status,\n  p.name || ' contains ' || coalesce(w.statements_num,0)  || ' statements that allow blocked actions on AWS KMS keys.' as reason\n  \n  , p.account_id\nfrom\n  aws_iam_policy as p\n  left join kms_blocked_actions as w on p.arn = w.arn\nwhere\n  not p.is_aws_managed;\n"
  PrimaryTable: aws_iam_policy
  ListOfTables:
    - aws_iam_policy
    - aws_managed
  Parameters: []
Severity: high
Tags:
  category:
    - Compliance
  fedramp_low_rev_4:
    - "true"
  fedramp_moderate_rev_4:
    - "true"
  ffiec:
    - "true"
  gxp_21_cfr_part_11:
    - "true"
  hipaa_final_omnibus_security_rule_2013:
    - "true"
  hipaa_security_rule_2003:
    - "true"
  nist_800_171_rev_2:
    - "true"
  nist_csf:
    - "true"
  pci_dss_v321:
    - "true"
  plugin:
    - aws
  service:
    - AWS/IAM
IntegrationType:
  - aws_cloud_account
