ID: aws_iam_policy_no_star_star
Title: "IAM policy should not have statements with admin access"
Description: "AWS Identity and Access Management (IAM) can help you incorporate the principles of least privilege and separation of duties with access permissions and authorizations, restricting policies from containing 'Effect': 'Allow' with 'Action': '*' over 'Resource': '*'."
Connector:
- aws
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: |
    with bad_policies as (
      select
        arn,
        count(*) as num_bad_statements
      from
        aws_iam_policy,
        jsonb_array_elements(policy_std -> 'Statement') as s,
        jsonb_array_elements_text(s -> 'Resource') as resource,
        jsonb_array_elements_text(s -> 'Action') as action
      where
        s ->> 'Effect' = 'Allow'
        and resource = '*'
        and (
          (action = '*'
          or action = '*:*'
          )
      )
      group by
        arn
    )
    select
      -- Required Columns
      p.arn as resource,
      p.og_account_id as og_account_id,
      p.og_resource_id as og_resource_id,
      case
        when bad.arn is null then 'ok'
        else 'alarm'
      end status,
      p.name || ' contains ' || coalesce(bad.num_bad_statements,0)  ||
         ' statements that allow action "*" on resource "*".' as reason,
      -- Additional Dimensions
      p.account_id
    from
      aws_iam_policy as p
      left join bad_policies as bad on p.arn = bad.arn
    where
      p.arn not like 'arn:aws:iam::aws:policy%'
  PrimaryTable: aws_iam_policy
  ListOfTables:
  - aws_iam_policy
  Parameters: []
Severity: low
Tags:
  pci:
  - "true"
  pci_item_id:
  - iam_3
  pci_requirements:
  - 7.2.1
  pci_version:
  - v3.2.1
  plugin:
  - aws
  service:
  - iam
