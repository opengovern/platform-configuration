ID: aws_elb_application_lb_desync_mitigation_mode
Title: "ELB application load balancers should be configured with defensive or strictest desync mitigation mode"
Description: "This control checks whether an Application Load Balancer is configured with defensive or strictest desync mitigation mode. The control fails if an Application Load Balancer is not configured with defensive or strictest desync mitigation mode."
Query:
  Engine: CloudQL-v0.0.1
  QueryToExecute: "with app_lb_desync_mitigation_mode as (\n  select\n    arn,\n    l ->> 'Key',\n    l ->> 'Value' as v\n  from\n    aws_ec2_application_load_balancer,\n    jsonb_array_elements(load_balancer_attributes) as l\n  where\n    l ->> 'Key' = 'routing.http.desync_mitigation_mode'\n)\nselect\n  a.arn as resource,\n  a.og_account_id as og_account_id,\n  a.og_resource_id as og_resource_id,\n  case\n    when m.v = any(array['defensive', 'strictest']) then 'ok'\n    else 'alarm'\n  end as status,\n    title || ' has ' || m.v || ' desync mitigation mode.' as reason\n  \n  , region, account_id\nfrom\n  aws_ec2_application_load_balancer as a\n  left join app_lb_desync_mitigation_mode as m on a.arn = m.arn;\n"
  PrimaryTable: aws_ec2_application_load_balancer
  ListOfTables:
    - aws_ec2_application_load_balancer
  Parameters: []
Severity: medium
Tags:
  aws_foundational_security:
    - "true"
  category:
    - Compliance
  foundational_security_category:
    - data_integrity
  foundational_security_item_id:
    - elb_12
  plugin:
    - aws
  service:
    - AWS/ELB
IntegrationTypeName:
  - aws_cloud
